{"ast":null,"code":"var _jsxFileName = \"F:\\\\IT\\\\Web\\\\ReactJS\\\\TodoList_ReactReduxFirebase\\\\todolist\\\\src\\\\components\\\\TodosList.js\";\nimport React, { Component } from 'react';\nimport TodosListItem from './TodosListItem';\nimport { connect } from 'react-redux';\nimport { todoListData } from './fireBaseConnect';\n\nclass TodosList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.isChange = event => {\n      let name = event.target.name;\n      let value = event.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.keyPress = event => {\n      if (event.key === \"Enter\" && this.state.Name !== \"\") {\n        let item = {\n          Name: this.state.Name,\n          Status: 1\n        };\n        this.props.addNew(item);\n        this.setState({\n          Name: \"\"\n        });\n      }\n    };\n\n    this.setData = () => this.state.data.map((item, key) => {\n      if (item.Status !== 0) return React.createElement(TodosListItem, {\n        key: key,\n        Name: item.Name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    });\n\n    this.state = {\n      data: [],\n      Name: \"\"\n    };\n  }\n\n  componentWillMount() {\n    todoListData.on('value', snapshot => {\n      let data = [];\n      snapshot.forEach(item => {\n        let Id = item.key;\n        let Name = item.val().Name;\n        let Status = item.val().Status;\n        data.push({\n          Id: Id,\n          Name: Name,\n          Status: Status\n        });\n      });\n      this.setState({\n        data: data\n      });\n      this.props.getData(data);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"todolist not-done\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Todos\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.Name,\n      name: \"Name\",\n      onKeyPress: event => this.keyPress(event),\n      onChange: event => this.isChange(event),\n      className: \"form-control add-todo\",\n      placeholder: \"Add todo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"checkAll\",\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Mark all as done\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      id: \"sortable\",\n      className: \"list-unstyled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.setData()), React.createElement(\"div\", {\n      className: \"todo-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"count-todos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), \"10\"), \" Items Left\")));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    data: state.data\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    addNew: item => {\n      dispatch({\n        type: \"ADD_NEW\",\n        newItem: item\n      });\n    },\n    getData: data => {\n      dispatch({\n        type: \"GET_DATA\",\n        newData: data\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodosList);","map":{"version":3,"sources":["F:\\IT\\Web\\ReactJS\\TodoList_ReactReduxFirebase\\todolist\\src\\components\\TodosList.js"],"names":["React","Component","TodosListItem","connect","todoListData","TodosList","constructor","props","isChange","event","name","target","value","setState","keyPress","key","state","Name","item","Status","addNew","setData","data","map","componentWillMount","on","snapshot","forEach","Id","val","push","getData","render","mapStateToProps","ownProps","mapDispatchToProps","dispatch","type","newItem","newData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport TodosListItem from './TodosListItem';\r\nimport { connect } from 'react-redux';\r\nimport { todoListData } from './fireBaseConnect'\r\n\r\n\r\nclass TodosList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            Name: \"\"\r\n        }\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        todoListData.on('value', (snapshot) => {\r\n            let data = [];\r\n            snapshot.forEach(item => {\r\n                let Id = item.key;\r\n                let Name = item.val().Name;\r\n                let Status = item.val().Status;\r\n                data.push({\r\n                    Id: Id,\r\n                    Name: Name,\r\n                    Status: Status\r\n                });\r\n\r\n            });\r\n            this.setState({ data: data });\r\n            this.props.getData(data);\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    isChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    keyPress = (event) => {\r\n        if (event.key === \"Enter\" && this.state.Name !== \"\") {\r\n            let item = {\r\n                Name: this.state.Name,\r\n                Status: 1\r\n            }\r\n            this.props.addNew(item)\r\n            this.setState({\r\n                Name: \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    setData = () => (\r\n        this.state.data.map((item, key) => {\r\n            if (item.Status !== 0)\r\n                return (<TodosListItem key={key} Name={item.Name}></TodosListItem>)\r\n        })\r\n    )\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-6\">\r\n                <div className=\"todolist not-done\">\r\n                    <h1>Todos</h1>\r\n                    <input type=\"text\" value={this.state.Name} name=\"Name\" onKeyPress={(event) => this.keyPress(event)} onChange={(event) => this.isChange(event)} className=\"form-control add-todo\" placeholder=\"Add todo\" />\r\n\r\n\r\n                    <button id=\"checkAll\" className=\"btn btn-success\">Mark all as done</button>\r\n                    <hr />\r\n                    <ul id=\"sortable\" className=\"list-unstyled\">\r\n                        {this.setData()}\r\n\r\n                    </ul>\r\n                    <div className=\"todo-footer\">\r\n                        <strong><span className=\"count-todos\" />10</strong> Items Left\r\n    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        data: state.data\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        addNew: (item) => {\r\n            dispatch({ type: \"ADD_NEW\", newItem: item })\r\n        },\r\n        getData: (data) => {\r\n            dispatch({ type: \"GET_DATA\", newData: data })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodosList)\r\n"]},"metadata":{},"sourceType":"module"}