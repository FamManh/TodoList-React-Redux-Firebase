{"ast":null,"code":"import { todoListData } from './fireBaseConnect';\n\nlet redux = require('redux');\n\nconst todoListInitialState = {\n  data: []\n};\n\nconst todoListReducer = (state = todoListInitialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nconst getData = () => {\n  let data = [];\n  let obj = {};\n  todoListData.on('value', snapshot => {\n    snapshot.forEach(item => {\n      let Id = item.key;\n      let Name = item.val().Name;\n      let Level = item.val().Level;\n      let Status = item.val().Status;\n    });\n  });\n};\n\nlet store = redux.createStore(todoListReducer);\nexport default store;","map":{"version":3,"sources":["F:\\IT\\Web\\ReactJS\\TodoList_ReactReduxFirebase\\todolist\\src\\components\\store.js"],"names":["todoListData","redux","require","todoListInitialState","data","todoListReducer","state","action","type","getData","obj","on","snapshot","forEach","item","Id","key","Name","val","Level","Status","store","createStore"],"mappings":"AAAA,SAASA,YAAT,QAA6B,mBAA7B;;AACA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAIA,MAAMC,oBAAoB,GAAG;AACzBC,EAAAA,IAAI,EAAE;AADmB,CAA7B;;AAGA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGH,oBAAT,EAA+BI,MAA/B,KAA0C;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACI;AACI,aAAOF,KAAP;AAFR;AAIH,CALD;;AAOA,MAAMG,OAAO,GAAG,MAAM;AAClB,MAAIL,IAAI,GAAG,EAAX;AACA,MAAIM,GAAG,GAAG,EAAV;AACAV,EAAAA,YAAY,CAACW,EAAb,CAAgB,OAAhB,EAA0BC,QAAD,IAAc;AACnCA,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,IAAI,IAAI;AACrB,UAAIC,EAAE,GAAGD,IAAI,CAACE,GAAd;AACA,UAAIC,IAAI,GAAGH,IAAI,CAACI,GAAL,GAAWD,IAAtB;AACA,UAAIE,KAAK,GAAGL,IAAI,CAACI,GAAL,GAAWC,KAAvB;AACA,UAAIC,MAAM,GAAGN,IAAI,CAACI,GAAL,GAAWE,MAAxB;AACH,KALD;AAMH,GAPD;AASH,CAZD;;AAcA,IAAIC,KAAK,GAAGpB,KAAK,CAACqB,WAAN,CAAkBjB,eAAlB,CAAZ;AACA,eAAegB,KAAf","sourcesContent":["import { todoListData } from './fireBaseConnect'\r\nlet redux = require('redux');\r\n\r\n\r\n\r\nconst todoListInitialState = {\r\n    data: []\r\n}\r\nconst todoListReducer = (state = todoListInitialState, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst getData = () => {\r\n    let data = [];\r\n    let obj = {}\r\n    todoListData.on('value', (snapshot) => {\r\n        snapshot.forEach(item => {\r\n            let Id = item.key;\r\n            let Name = item.val().Name;\r\n            let Level = item.val().Level;\r\n            let Status = item.val().Status;\r\n        })\r\n    })\r\n\r\n}\r\n\r\nlet store = redux.createStore(todoListReducer);\r\nexport default store;"]},"metadata":{},"sourceType":"module"}