{"ast":null,"code":"import _objectSpread from \"F:\\\\IT\\\\Web\\\\ReactJS\\\\TodoList_ReactReduxFirebase\\\\todolist\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { todoListData } from './fireBaseConnect';\n\nlet redux = require('redux');\n\nconst todoListInitialState = {\n  data: []\n};\n\nconst todoListReducer = (state = todoListInitialState, action) => {\n  switch (action.type) {\n    case 'GET_DATA':\n      return _objectSpread({}, state, {\n        data: action.newData\n      });\n\n    case 'ADD_NEW':\n      todoListData.push(action.newItem);\n      return state;\n\n    case 'DELETE_DATA':\n      todoListData.child(action.deleteId).remove();\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nlet store = redux.createStore(todoListReducer);\nexport default store;","map":{"version":3,"sources":["F:\\IT\\Web\\ReactJS\\TodoList_ReactReduxFirebase\\todolist\\src\\components\\store.js"],"names":["todoListData","redux","require","todoListInitialState","data","todoListReducer","state","action","type","newData","push","newItem","child","deleteId","remove","store","createStore"],"mappings":";AAAA,SAASA,YAAT,QAA6B,mBAA7B;;AACA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAIA,MAAMC,oBAAoB,GAAG;AACzBC,EAAAA,IAAI,EAAE;AADmB,CAA7B;;AAGA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGH,oBAAT,EAA+BI,MAA/B,KAA0C;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,+BAAYF,KAAZ;AAAmBF,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAAhC;;AACJ,SAAK,SAAL;AACIT,MAAAA,YAAY,CAACU,IAAb,CAAkBH,MAAM,CAACI,OAAzB;AACA,aAAOL,KAAP;;AACJ,SAAK,aAAL;AACIN,MAAAA,YAAY,CAACY,KAAb,CAAmBL,MAAM,CAACM,QAA1B,EAAoCC,MAApC;AACA,aAAOR,KAAP;;AACJ;AACI,aAAOA,KAAP;AAVR;AAYH,CAbD;;AAeA,IAAIS,KAAK,GAAGd,KAAK,CAACe,WAAN,CAAkBX,eAAlB,CAAZ;AACA,eAAeU,KAAf","sourcesContent":["import { todoListData } from './fireBaseConnect'\r\nlet redux = require('redux');\r\n\r\n\r\n\r\nconst todoListInitialState = {\r\n    data: []\r\n}\r\nconst todoListReducer = (state = todoListInitialState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_DATA':\r\n            return { ...state, data: action.newData };\r\n        case 'ADD_NEW':\r\n            todoListData.push(action.newItem)\r\n            return state;\r\n        case 'DELETE_DATA':\r\n            todoListData.child(action.deleteId).remove();\r\n            return state;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nlet store = redux.createStore(todoListReducer);\r\nexport default store;"]},"metadata":{},"sourceType":"module"}